This patch will make __INTRODUCED_IN() macro work properly as `__availability__`
attribute is not available in GCC.

[1]: https://github.com/its-pointless/gcc_termux/issues/141
[2]: https://android.googlesource.com/platform/bionic/+/bfb6bae9fb5ef42e4f9ae2847f30f41938c04900
--- a/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/include/android/versioning.h
+++ b/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/include/android/versioning.h
@@ -16,6 +16,16 @@
 
 #pragma once
 
+#if !defined(__clang__)
+
+#define __BIONIC_AVAILABILITY_GUARD(api_level) (__ANDROID_API__ >= (api_level))
+#define __INTRODUCED_IN(api_level) __attribute__((__annotate__("introduced_in=" #api_level)))
+#define __DEPRECATED_IN(api_level, msg) __attribute__((__annotate__("deprecated_in=" #api_level)))
+#define __REMOVED_IN(api_level, msg) __attribute__((__annotate__("obsoleted_in=" #api_level)))
+#define __INTRODUCED_IN_32(api_level) __attribute__((__annotate__("introduced_in_32=" #api_level)))
+#define __INTRODUCED_IN_64(api_level) __attribute__((__annotate__("introduced_in_64=" #api_level)))
+
+#else
 /**
  * @def __ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__
  *
@@ -80,3 +89,5 @@
 #define __INTRODUCED_IN_32(api_level)
 #define __INTRODUCED_IN_64(api_level) __BIONIC_AVAILABILITY(introduced=api_level)
 #endif
+
+#endif // !defined(__clang__)
