Enable jumbo build for the following component(s)/source_set(s):
- //chrome/browser/extensions:extensions
- //chrome/browser/feedback:feedback_impl
- //chrome/browser/glic:impl
- //chrome/browser/media/webrtc:webrtc
- //chrome/browser/notifications/scheduler/internal:lib
- //chrome/browser/permissions:permissions
- //chrome/browser/sync:sync
- //chrome/browser/task_manager:impl
- //chrome/browser/ui/autofill:impl
- //chrome/browser/ui/autofill/payments:impl
- //chrome/browser/ui/global_media_controls:impl
- //chrome/browser/ui/lens:impl
- //chrome/browser/ui/views/download:download
- //chrome/browser/ui/views/side_panel:side_panel
- //chrome/browser/ui/views/toolbar:toolbar
- //chrome/browser/web_applications:web_applications
- //chrome/common:common_lib
- //chrome/common/extensions:extensions
- //chrome/common/extensions/api:generated_api_types
- //chrome/test/chromedriver:automation_client_lib
- //chrome/test/chromedriver:lib

Enable jumbo build for the following template(s):
- //tools/json_schema_compiler/json_schema_api.gni -> template("generated_types")

--- a/chrome/browser/extensions/BUILD.gn
+++ b/chrome/browser/extensions/BUILD.gn
@@ -5,6 +5,7 @@
 import("//build/config/chromebox_for_meetings/buildflags.gni")
 import("//build/config/chromeos/ui_mode.gni")
 import("//build/config/features.gni")
+import("//build/config/jumbo.gni")
 import("//build/config/ozone.gni")
 import("//build/config/ui.gni")
 import("//chrome/common/features.gni")
@@ -23,7 +24,7 @@
 assert(enable_supervised_users)
 assert(!is_fuchsia, "Fuchsia shouldn't use anything in //chrome")
 
-source_set("extensions") {
+jumbo_source_set("extensions") {
   # TODO(https://crbug.com/356905053): When files support being built on
   # desktop android, move them here, outside the if (enable_extensions) block.
   sources = [
@@ -424,6 +425,7 @@
     "window_controller_list.h",
     "window_controller_list_observer.h",
   ]
+  jumbo_excluded_sources = []
   configs += [
     "//build/config:precompiled_headers",
     "//build/config/compiler:wexit_time_destructors",
@@ -766,6 +768,10 @@
       "webstore_install_with_prompt.cc",
       "webstore_install_with_prompt.h",
     ]
+    jumbo_excluded_sources += [
+      # FIXME: Too many conflicts, namespace storage should be replaced with ::storage
+      "api/developer_private/developer_private_functions_desktop.cc",
+    ]
 
     if (safe_browsing_mode != 0) {
       sources += [
--- a/chrome/browser/extensions/extension_management.cc
+++ b/chrome/browser/extensions/extension_management.cc
@@ -433,7 +433,7 @@
   }
   // Allow extensions loaded from DevTools' "Extensions.loadUnpacked" command.
   if (base::CommandLine::ForCurrentProcess()->HasSwitch(
-          switches::kEnableUnsafeExtensionDebugging)) {
+          ::switches::kEnableUnsafeExtensionDebugging)) {
     return true;
   }
 
--- a/chrome/browser/extensions/api/image_writer_private/tar_extractor.cc
+++ b/chrome/browser/extensions/api/image_writer_private/tar_extractor.cc
@@ -15,6 +15,9 @@
 // TarExtractor extracts a .tar file. The actual .tar file extraction is
 // performed in a utility process.
 
+#define kExtractedBinFileName kExtractedBinFileName_TAR
+#define kExpectedMagic        kExpectedMagic_TAR
+
 namespace extensions {
 namespace image_writer {
 
@@ -140,3 +143,6 @@
 
 }  // namespace image_writer
 }  // namespace extensions
+
+#undef kExtractedBinFileName
+#undef kExpectedMagic
--- a/chrome/browser/extensions/api/image_writer_private/xz_extractor.cc
+++ b/chrome/browser/extensions/api/image_writer_private/xz_extractor.cc
@@ -14,6 +14,9 @@
 // XzExtractor extracts a .tar.xz file. Xz extraction uses third party
 // libraries, so actual .tar.xz extraction is performed in a utility process.
 
+#define kExtractedBinFileName kExtractedBinFileName_XZ
+#define kExpectedMagic        kExpectedMagic_XZ
+
 namespace extensions {
 namespace image_writer {
 
@@ -131,3 +134,6 @@
 
 }  // namespace image_writer
 }  // namespace extensions
+
+#undef kExtractedBinFileName
+#undef kExpectedMagic
--- a/chrome/browser/extensions/api/image_writer_private/zip_extractor.cc
+++ b/chrome/browser/extensions/api/image_writer_private/zip_extractor.cc
@@ -13,6 +13,8 @@
 #include "base/task/thread_pool.h"
 #include "chrome/browser/extensions/api/image_writer_private/error_constants.h"
 
+#define kExpectedMagic kExpectedMagic_ZIP
+
 namespace extensions {
 namespace image_writer {
 
@@ -105,3 +107,5 @@
 
 }  // namespace image_writer
 }  // namespace extensions
+
+#undef kExpectedMagic
--- a/chrome/browser/extensions/api/tabs/tabs_event_router.h
+++ b/chrome/browser/extensions/api/tabs/tabs_event_router.h
@@ -75,7 +75,7 @@
   void TabGroupedStateChanged(TabStripModel* tab_strip_model,
                               std::optional<tab_groups::TabGroupId> old_group,
                               std::optional<tab_groups::TabGroupId> new_group,
-                              tabs::TabInterface* tab,
+                              ::tabs::TabInterface* tab,
                               int index) override;
   void OnTabGroupChanged(const TabGroupChange& change) override;
 
--- a/chrome/browser/extensions/api/tabs/tabs_event_router.cc
+++ b/chrome/browser/extensions/api/tabs/tabs_event_router.cc
@@ -302,7 +302,7 @@
       change.GetCreateChange()->reason() ==
           TabGroupChange::TabGroupCreationReason::
               kInsertedFromAnotherTabstrip) {
-    for (tabs::TabInterface* tab :
+    for (::tabs::TabInterface* tab :
          change.GetCreateChange()->GetDetachedTabs()) {
       std::set<std::string> changed_property_names;
       changed_property_names.insert(kGroupIdKey);
@@ -313,7 +313,7 @@
              change.GetCloseChange()->reason() ==
                  TabGroupChange::TabGroupClosureReason::
                      kDetachedToAnotherTabstrip) {
-    for (tabs::TabInterface* tab : change.GetCloseChange()->GetDetachedTabs()) {
+    for (::tabs::TabInterface* tab : change.GetCloseChange()->GetDetachedTabs()) {
       std::set<std::string> changed_property_names;
       changed_property_names.insert(kGroupIdKey);
       DispatchTabUpdatedEvent(tab->GetContents(),
@@ -326,7 +326,7 @@
     TabStripModel* tab_strip_model,
     std::optional<tab_groups::TabGroupId> old_group,
     std::optional<tab_groups::TabGroupId> new_group,
-    tabs::TabInterface* tab,
+    ::tabs::TabInterface* tab,
     int index) {
   std::set<std::string> changed_property_names;
   changed_property_names.insert(kGroupIdKey);
--- a/chrome/browser/extensions/extension_view_host_factory.h
+++ b/chrome/browser/extensions/extension_view_host_factory.h
@@ -38,7 +38,7 @@
   static std::unique_ptr<ExtensionViewHost> CreateSidePanelHost(
       const GURL& url,
       BrowserWindowInterface* browser,
-      tabs::TabInterface* tab_interface);
+      ::tabs::TabInterface* tab_interface);
 };
 
 }  // namespace extensions
--- a/chrome/browser/extensions/extension_view_host_factory.cc
+++ b/chrome/browser/extensions/extension_view_host_factory.cc
@@ -214,7 +214,7 @@
 ExtensionViewHostFactory::CreateSidePanelHost(
     const GURL& url,
     BrowserWindowInterface* browser,
-    tabs::TabInterface* tab_interface) {
+    ::tabs::TabInterface* tab_interface) {
   DCHECK(browser == nullptr ^ tab_interface == nullptr);
 
   Profile* profile =
--- a/chrome/browser/media/webrtc/BUILD.gn
+++ b/chrome/browser/media/webrtc/BUILD.gn
@@ -4,13 +4,14 @@
 
 assert(is_win || is_mac || is_linux || is_chromeos || is_android)
 
+import("//build/config/jumbo.gni")
 import("//build/config/ozone.gni")
 import("//build/config/ui.gni")
 import("//chrome/common/features.gni")
 import("//content/public/common/features.gni")
 import("//third_party/webrtc/webrtc.gni")
 
-source_set("webrtc") {
+jumbo_source_set("webrtc") {
   sources = [
     "audio_debug_recordings_handler.cc",
     "audio_debug_recordings_handler.h",
--- a/chrome/browser/media/webrtc/tab_desktop_media_list.cc
+++ b/chrome/browser/media/webrtc/tab_desktop_media_list.cc
@@ -75,7 +75,7 @@
 // Update the list once per second.
 const int kDefaultTabDesktopMediaListUpdatePeriod = 1000;
 
-void HandleCapturedBitmap(
+void HandleCapturedBitmap2(
     base::OnceCallback<void(uint32_t, const gfx::ImageSkia&)> reply,
     std::optional<uint32_t> last_hash,
     const SkBitmap& bitmap) {
@@ -327,7 +327,7 @@
                               weak_factory_.GetWeakPtr(), id,
                               std::move(refresh_completer));
   image_resize_task_runner_.get()->PostTask(
-      FROM_HERE, base::BindOnce(&HandleCapturedBitmap, std::move(reply),
+      FROM_HERE, base::BindOnce(&HandleCapturedBitmap2, std::move(reply),
                                 last_hash_, bitmap));
 }
 
--- a/chrome/browser/feedback/BUILD.gn
+++ b/chrome/browser/feedback/BUILD.gn
@@ -5,6 +5,7 @@
 assert(is_win || is_mac || is_linux || is_chromeos || is_android)
 
 import("//build/config/chromeos/ui_mode.gni")
+import("//build/config/jumbo.gni")
 
 source_set("feedback_enum") {
   sources = [ "public/feedback_source.h" ]
@@ -58,7 +59,7 @@
   }
 }
 
-source_set("feedback_impl") {
+jumbo_source_set("feedback_impl") {
   sources = []
   deps = [ ":feedback" ]
   public_deps = [ "//components/feedback" ]
--- a/chrome/browser/glic/BUILD.gn
+++ b/chrome/browser/glic/BUILD.gn
@@ -3,13 +3,14 @@
 # found in the LICENSE file.
 
 import("//build/config/gclient_args.gni")
+import("//build/config/jumbo.gni")
 import("//build/config/ozone.gni")
 import("//chrome/common/features.gni")
 import("//mojo/public/tools/bindings/mojom.gni")
 
 assert(enable_glic)
 
-source_set("glic") {
+jumbo_source_set("glic") {
   sources = [
     "browser_ui/glic_border_view.h",
     "browser_ui/glic_button_controller.h",
--- a/chrome/browser/notifications/scheduler/internal/BUILD.gn
+++ b/chrome/browser/notifications/scheduler/internal/BUILD.gn
@@ -2,8 +2,10 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/jumbo.gni")
+
 # Internal library that embedders should not directly depend on.
-source_set("lib") {
+jumbo_source_set("lib") {
   visibility = [
     ":unit_tests",
     "//chrome/browser/notifications/scheduler",
--- a/chrome/browser/permissions/BUILD.gn
+++ b/chrome/browser/permissions/BUILD.gn
@@ -2,6 +2,7 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/jumbo.gni")
 import("//build/config/ui.gni")
 import("//components/optimization_guide/features.gni")
 import("//components/safe_browsing/buildflags.gni")
@@ -9,7 +10,7 @@
 import("//services/device/public/cpp/geolocation/buildflags.gni")
 import("//third_party/protobuf/proto_library.gni")
 
-source_set("permissions") {
+jumbo_source_set("permissions") {
   sources = [
     "chrome_permissions_client.cc",
     "chrome_permissions_client.h",
@@ -55,6 +56,10 @@
     "quiet_notification_permission_ui_state.cc",
     "quiet_notification_permission_ui_state.h",
   ]
+  jumbo_excluded_sources = [
+    # FIXME: Too many conflicts, reference to 'PermissionUmaUtil' is ambiguous
+    "prediction_based_permission_ui_selector.cc",
+  ]
 
   public_deps = [
     "//chrome/browser:browser_public_dependencies",
--- a/chrome/browser/sync/BUILD.gn
+++ b/chrome/browser/sync/BUILD.gn
@@ -2,13 +2,14 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/jumbo.gni")
 import("//chrome/common/features.gni")
 import("//components/supervised_user/buildflags.gni")
 import("//extensions/buildflags/buildflags.gni")
 
 assert(is_win || is_mac || is_linux || is_chromeos || is_android)
 
-source_set("sync") {
+jumbo_source_set("sync") {
   sources = [
     "account_bookmark_sync_service_factory.cc",
     "account_bookmark_sync_service_factory.h",
--- a/chrome/browser/task_manager/BUILD.gn
+++ b/chrome/browser/task_manager/BUILD.gn
@@ -2,6 +2,7 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/jumbo.gni")
 import("//chrome/common/features.gni")
 import("//components/guest_view/buildflags/buildflags.gni")
 import("//components/nacl/features.gni")
@@ -120,7 +121,7 @@
 # The implementation must be linked into the same binary as the public
 # interface. This does have circular dependencies with //chrome/browser and
 # //chrome/browser/ui.
-source_set("impl") {
+jumbo_source_set("impl") {
   public_deps = [ "//chrome/browser:browser_public_dependencies" ]
 
   sources = [
--- a/chrome/browser/ui/autofill/BUILD.gn
+++ b/chrome/browser/ui/autofill/BUILD.gn
@@ -3,6 +3,7 @@
 # found in the LICENSE file.
 
 import("//build/config/chrome_build.gni")
+import("//build/config/jumbo.gni")
 import("//build/config/ui.gni")
 import("//components/signin/features.gni")
 
@@ -108,7 +109,7 @@
   allow_circular_includes_from = [ "//chrome/browser/ui/autofill/payments" ]
 }
 
-source_set("impl") {
+jumbo_source_set("impl") {
   sources = [
     "autofill_bubble_controller_base.cc",
     "autofill_client_provider.cc",
--- a/chrome/browser/ui/autofill/payments/BUILD.gn
+++ b/chrome/browser/ui/autofill/payments/BUILD.gn
@@ -2,6 +2,7 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/jumbo.gni")
 import("//build/config/ui.gni")
 
 assert(is_win || is_mac || is_linux || is_chromeos || is_android)
@@ -77,7 +78,7 @@
   }
 }
 
-source_set("impl") {
+jumbo_source_set("impl") {
   sources = [
     "autofill_dialog_models.cc",
     "chrome_payments_autofill_client.cc",
--- a/chrome/browser/ui/global_media_controls/BUILD.gn
+++ b/chrome/browser/ui/global_media_controls/BUILD.gn
@@ -2,6 +2,8 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/jumbo.gni")
+
 assert(is_win || is_mac || is_linux || is_chromeos)
 
 source_set("global_media_controls") {
@@ -49,7 +51,7 @@
   ]
 }
 
-source_set("impl") {
+jumbo_source_set("impl") {
   sources = [
     "cast_device_list_host.cc",
     "cast_media_notification_item.cc",
--- a/chrome/browser/ui/global_media_controls/presentation_request_notification_item.cc
+++ b/chrome/browser/ui/global_media_controls/presentation_request_notification_item.cc
@@ -15,6 +15,8 @@
 #include "services/media_session/public/cpp/media_metadata.h"
 #include "ui/gfx/image/image_skia.h"
 
+#define GetWebContentsFromPresentationRequest GetWebContentsFromPresentationRequest_Item
+
 namespace {
 
 content::MediaSession* g_media_session_for_test = nullptr;
@@ -209,3 +211,5 @@
   favicon_image_ = GetCorrectColorTypeImage(bitmap).value_or(gfx::ImageSkia());
   UpdatePickerWithImages();
 }
+
+#undef GetWebContentsFromPresentationRequest
--- a/chrome/browser/ui/lens/BUILD.gn
+++ b/chrome/browser/ui/lens/BUILD.gn
@@ -2,6 +2,7 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/jumbo.gni")
 import("//pdf/features.gni")
 
 # Contained Lens dependencies are currently for desktop platforms only
@@ -79,7 +80,7 @@
   }
 }
 
-source_set("impl") {
+jumbo_source_set("impl") {
   sources = [
     "lens_help_menu_utils.cc",
     "lens_overlay_blur_layer_delegate.cc",
--- a/chrome/browser/ui/lens/lens_overlay_gen204_controller.cc
+++ b/chrome/browser/ui/lens/lens_overlay_gen204_controller.cc
@@ -22,6 +22,10 @@
 #include "services/network/public/cpp/resource_request.h"
 #include "services/network/public/cpp/shared_url_loader_factory.h"
 
+#define kMaxDownloadBytes     kMaxDownloadBytes_Gen204
+#define kTrafficAnnotationTag kTrafficAnnotationTag_Gen204
+#define kGen204IdentifierQueryParameter kGen204IdentifierQueryParameter_Gen204
+
 namespace lens {
 
 namespace {
@@ -325,3 +329,7 @@
 }
 
 }  // namespace lens
+
+#undef kMaxDownloadBytes
+#undef kTrafficAnnotationTag
+#undef kGen204IdentifierQueryParameter
--- a/chrome/browser/ui/lens/lens_overlay_languages_controller.cc
+++ b/chrome/browser/ui/lens/lens_overlay_languages_controller.cc
@@ -22,6 +22,8 @@
 #include "services/network/public/cpp/simple_url_loader.h"
 #include "ui/base/l10n/l10n_util.h"
 
+#define kTrafficAnnotationTag kTrafficAnnotationTag_LensOverlayLanguagesController
+
 namespace lens {
 
 namespace {
@@ -181,3 +183,5 @@
 }
 
 }  // namespace lens
+
+#undef kTrafficAnnotationTag
--- a/chrome/browser/ui/lens/lens_overlay_untrusted_ui.cc
+++ b/chrome/browser/ui/lens/lens_overlay_untrusted_ui.cc
@@ -312,7 +312,7 @@
   // Determine if the cursor tooltip should appear.
   Profile* profile = Profile::FromWebUI(web_ui);
   int lens_overlay_start_count =
-      profile->GetPrefs()->GetInteger(prefs::kLensOverlayStartCount);
+      profile->GetPrefs()->GetInteger(::prefs::kLensOverlayStartCount);
   html_source->AddBoolean(
       "canShowTooltipFromPrefs",
       lens_overlay_start_count <= kNumTimesToShowCursorTooltips);
--- a/chrome/browser/ui/lens/lens_overlay_url_builder.cc
+++ b/chrome/browser/ui/lens/lens_overlay_url_builder.cc
@@ -26,6 +26,8 @@
 #include "third_party/zlib/google/compression_utils.h"
 #include "url/gurl.h"
 
+#define kVisualInputTypeQueryParameterKey kVisualInputTypeQueryParameterKey_URLBuilder
+
 namespace lens {
 namespace {
 // Query parameter for the search text query.
@@ -569,3 +571,5 @@
 }
 
 }  // namespace lens
+
+#undef kVisualInputTypeQueryParameterKey
--- a/chrome/browser/ui/lens/lens_search_contextualization_controller.cc
+++ b/chrome/browser/ui/lens/lens_search_contextualization_controller.cc
@@ -27,6 +27,8 @@
 #include "pdf/mojom/pdf.mojom.h"
 #endif  // BUILDFLAG(ENABLE_PDF)
 
+#define kByteChangeTolerancePercent kByteChangeTolerancePercent_Controller
+
 namespace {
 
 // The amount of change in bytes that is considered a significant change and
@@ -34,7 +36,7 @@
 // case there is slight variation in the retrieved bytes in between calls.
 constexpr float kByteChangeTolerancePercent = 0.01;
 
-bool IsPageContextEligible(
+bool IsPageContextEligible_Controller(
     const GURL& main_frame_url,
     std::vector<optimization_guide::FrameMetadata> frame_metadata,
     optimization_guide::PageContextEligibility* page_context_eligibility) {
@@ -50,6 +52,8 @@
 
 }  // namespace
 
+#define IsPageContextEligible       IsPageContextEligible_Controller
+
 namespace lens {
 
 LensSearchContextualizationController::LensSearchContextualizationController(
@@ -771,3 +775,6 @@
 }
 
 }  // namespace lens
+
+#undef kByteChangeTolerancePercent
+#undef IsPageContextEligible
--- a/chrome/browser/ui/views/download/BUILD.gn
+++ b/chrome/browser/ui/views/download/BUILD.gn
@@ -2,9 +2,11 @@
 # Use of this source code is governed by a BSD - style license that can be
 # found in the LICENSE file.
 
+import("//build/config/jumbo.gni")
+
 assert(is_win || is_mac || is_linux || is_chromeos)
 
-source_set("download") {
+jumbo_source_set("download") {
   sources = [
     "bubble/download_bubble_contents_view.cc",
     "bubble/download_bubble_contents_view.h",
--- a/chrome/browser/ui/views/download/bubble/download_bubble_security_view.cc
+++ b/chrome/browser/ui/views/download/bubble/download_bubble_security_view.cc
@@ -47,6 +47,9 @@
 #include "ui/views/view_class_properties.h"
 #include "ui/views/window/dialog_client_view.h"
 
+#define kProgressBarHeight kProgressBarHeight_SecurityView
+#define kNumColumns        kNumColumns_SecurityView
+
 namespace {
 using offline_items_collection::ContentId;
 
@@ -836,5 +839,8 @@
                                 DownloadBubbleSubpageAction::kShown);
 }
 
+#undef kProgressBarHeight
+#undef kNumColumns
+
 BEGIN_METADATA(DownloadBubbleSecurityView)
 END_METADATA
--- a/chrome/browser/ui/views/download/download_shelf_view.cc
+++ b/chrome/browser/ui/views/download/download_shelf_view.cc
@@ -46,6 +46,9 @@
 #include "ui/views/view.h"
 #include "ui/views/widget/widget.h"
 
+#define kStartPadding kStartPadding_ShelfView
+#define kEndPadding   kEndPadding_ShelfView
+
 namespace {
 
 // TODO(pkasting): Replace these with LayoutProvider constants
@@ -359,5 +362,8 @@
   return download_views_.empty() ? nullptr : download_views_.back();
 }
 
+#undef kStartPadding
+#undef kEndPadding
+
 BEGIN_METADATA(DownloadShelfView)
 END_METADATA
--- a/chrome/browser/ui/views/side_panel/BUILD.gn
+++ b/chrome/browser/ui/views/side_panel/BUILD.gn
@@ -4,13 +4,14 @@
 
 assert(is_win || is_mac || is_linux || is_chromeos)
 
+import("//build/config/jumbo.gni")
 import("//extensions/buildflags/buildflags.gni")
 
 source_set("side_panel_enums") {
   sources = [ "side_panel_enums.h" ]
 }
 
-source_set("side_panel") {
+jumbo_source_set("side_panel") {
   sources = [
     "bookmarks/bookmarks_side_panel_coordinator.cc",
     "bookmarks/bookmarks_side_panel_coordinator.h",
--- a/chrome/browser/ui/views/toolbar/BUILD.gn
+++ b/chrome/browser/ui/views/toolbar/BUILD.gn
@@ -4,10 +4,11 @@
 
 assert(is_win || is_mac || is_linux || is_chromeos)
 
+import("//build/config/jumbo.gni")
 import("//build/config/ui.gni")
 import("//ui/webui/webui_features.gni")
 
-source_set("toolbar") {
+jumbo_source_set("toolbar") {
   sources = [
     "app_menu.cc",
     "app_menu.h",
--- a/chrome/browser/ui/views/toolbar/toolbar_ink_drop_util.cc
+++ b/chrome/browser/ui/views/toolbar/toolbar_ink_drop_util.cc
@@ -30,6 +30,8 @@
 #include "ui/views/view.h"
 #include "ui/views/view_class_properties.h"
 
+#define ToolbarButtonHighlightPathGenerator ToolbarButtonHighlightPathGenerator_DropUtil
+
 namespace {
 class ToolbarButtonHighlightPathGenerator
     : public views::HighlightPathGenerator {
@@ -148,3 +150,5 @@
       },
       host, hover_color_id));
 }
+
+#undef ToolbarButtonHighlightPathGenerator
--- a/chrome/common/extensions/BUILD.gn
+++ b/chrome/common/extensions/BUILD.gn
@@ -3,12 +3,13 @@
 # found in the LICENSE file.
 
 import("//build/config/features.gni")
+import("//build/config/jumbo.gni")
 import("//extensions/buildflags/buildflags.gni")
 import("//tools/json_schema_compiler/json_features.gni")
 
 assert(enable_extensions_core)
 
-source_set("extensions") {
+jumbo_source_set("extensions") {
   # The files that can be included from other modules.
   public = [
     "api/notifications/notification_style.h",
--- a/chrome/common/BUILD.gn
+++ b/chrome/common/BUILD.gn
@@ -4,6 +4,7 @@
 
 import("//build/buildflag_header.gni")
 import("//build/config/chrome_build.gni")
+import("//build/config/jumbo.gni")
 import("//build/util/process_version.gni")
 import("//chrome/browser/downgrade/buildflags.gni")
 import("//chrome/common/features.gni")
@@ -122,7 +123,7 @@
 
 # Use a static library here because many test binaries depend on this but don't
 # require many files from it. This makes linking more efficient.
-static_library("common_lib") {
+jumbo_static_library("common_lib") {
   visibility = [
     ":*",
     "//chrome/common/win:eventlog_messages",
--- a/tools/json_schema_compiler/json_schema_api.gni
+++ b/tools/json_schema_compiler/json_schema_api.gni
@@ -2,6 +2,8 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/jumbo.gni")
+
 # This file contains templates for generating static libraries based on the
 # corresponding output of the schema compiler tools. The output can be either
 # the generated C++ types (generated_types template), the bundled extension
@@ -354,7 +356,13 @@
     lib_deps += invoker.deps
   }
 
-  static_library(target_name) {
+  if (defined(invoker.is_jumbo_build) && invoker.is_jumbo_build) {
+    _component_mode = "jumbo_static_library"
+  } else {
+    _component_mode = "static_library"
+  }
+
+  target(_component_mode, target_name) {
     sources = lib_sources
     deps = lib_deps
     public_deps = lib_public_deps
--- a/chrome/common/extensions/api/BUILD.gn
+++ b/chrome/common/extensions/api/BUILD.gn
@@ -73,6 +73,8 @@
 }
 
 generated_types("generated_api_types") {
+  is_jumbo_build = true
+
   sources = chrome_extensions_api_schema_sources +
             chrome_extensions_types_only_schema_sources +
             chrome_extensions_manifest_only_schema_sources
--- a/chrome/browser/web_applications/BUILD.gn
+++ b/chrome/browser/web_applications/BUILD.gn
@@ -2,6 +2,7 @@
 # Copyright 2018 The Chromium Authors
 # found in the LICENSE file.
 
+import("//build/config/jumbo.gni")
 import("//chrome/browser/buildflags.gni")
 import("//extensions/buildflags/buildflags.gni")
 import("//mojo/public/tools/bindings/mojom.gni")
@@ -11,7 +12,7 @@
 assert(!is_android,
        "Android shouldn't use anything in //chrome/web_applications")
 
-source_set("web_applications") {
+jumbo_source_set("web_applications") {
   sources = [
     "callback_utils.h",
     "commands/clear_browsing_data_command.cc",
--- a/chrome/browser/web_applications/install_bounce_metric.cc
+++ b/chrome/browser/web_applications/install_bounce_metric.cc
@@ -12,6 +12,8 @@
 #include "components/prefs/scoped_user_pref_update.h"
 #include "content/public/browser/browser_thread.h"
 
+#define kInstallSource kInstallSource_InstallBounceMetric
+
 namespace {
 
 std::optional<base::Time>& GetTimeOverride() {
@@ -123,3 +125,5 @@
 }
 
 }  // namespace web_app
+
+#undef kInstallSource
--- a/chrome/browser/web_applications/isolated_web_apps/isolated_web_app_update_discovery_task.cc
+++ b/chrome/browser/web_applications/isolated_web_apps/isolated_web_app_update_discovery_task.cc
@@ -42,6 +42,9 @@
 #include "content/public/browser/web_contents.h"
 #include "net/base/net_errors.h"
 
+#define kUpdateManifestFetchTrafficAnnotation kUpdateManifestFetchTrafficAnnotation_IsolatedWebAppUpdateDiscoveryTask
+#define kWebBundleDownloadTrafficAnnotation   kWebBundleDownloadTrafficAnnotation_IsolatedWebAppUpdateDiscoveryTask
+
 namespace web_app {
 
 namespace {
@@ -442,3 +445,6 @@
 }
 
 }  // namespace web_app
+
+#undef kUpdateManifestFetchTrafficAnnotation
+#undef kWebBundleDownloadTrafficAnnotation
--- a/chrome/test/chromedriver/BUILD.gn
+++ b/chrome/test/chromedriver/BUILD.gn
@@ -3,6 +3,7 @@
 # found in the LICENSE file.
 
 import("//build/buildflag_header.gni")
+import("//build/config/jumbo.gni")
 import("//build/config/python.gni")
 import("//build/config/ui.gni")
 if (is_linux) {
@@ -123,7 +124,7 @@
   args += rebase_path(files, root_build_dir)
 }
 
-source_set("automation_client_lib") {
+jumbo_source_set("automation_client_lib") {
   testonly = true
   sources = [
     "chrome/adb.h",
@@ -296,7 +297,7 @@
   ]
 }
 
-source_set("lib") {
+jumbo_source_set("lib") {
   testonly = true
   sources = [
     "alert_commands.cc",
--- a/chrome/test/chromedriver/chrome/navigation_tracker.cc
+++ b/chrome/test/chromedriver/chrome/navigation_tracker.cc
@@ -20,6 +20,8 @@
 #include "chrome/test/chromedriver/chrome/status.h"
 #include "chrome/test/chromedriver/net/timeout.h"
 
+#define ObjectGroup ObjectGroup_NavigationTracker
+
 namespace {
 
 // Match to content/browser/devtools/devTools_session const of same name
@@ -453,3 +455,5 @@
   SetCurrentFrameInvalid();
   frame_to_state_map_.clear();
 }
+
+#undef ObjectGroup
