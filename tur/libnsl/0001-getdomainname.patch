--- a/src/yp_get_default_domain.c
+++ b/src/yp_get_default_domain.c
@@ -22,6 +22,32 @@
 #include <unistd.h>
 #include <rpcsvc/ypclnt.h>
 
+#if defined(__ANDROID__) &&  __ANDROID_API__ < 26
+
+#include <errno.h>
+#include <string.h>
+#include <unistd.h>
+#include <sys/utsname.h>
+
+static int getdomainname(char* name, size_t len) {
+  struct utsname uts;
+  if (uname(&uts) == -1) return -1;
+
+  // Note: getdomainname()'s behavior varies across implementations when len is
+  // too small.  bionic follows the historical libc policy of returning EINVAL,
+  // instead of glibc's policy of copying the first len bytes without a NULL
+  // terminator.
+  if (strlen(uts.domainname) >= len) {
+      errno = EINVAL;
+      return -1;
+  }
+
+  strncpy(name, uts.domainname, len);
+  return 0;
+}
+
+#endif
+
 #include "libc-lock.h"
 
 #define NIS_MAXNAMELEN 1024
