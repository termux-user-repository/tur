From a43b98e113d2126ec48512732dbd280137b69a3c Mon Sep 17 00:00:00 2001
From: Christian Heusel <christian@heusel.eu>
Date: Tue, 14 Oct 2025 15:50:34 +0200
Subject: [PATCH] build: Add compatibility with LLVM 20.1.3

This adds LLVM 21 compatibility.

Signed-off-by: Christian Heusel <christian@heusel.eu>
---
 INSTALL.md                       | 2 +-
 src/cmake/externalpackages.cmake | 2 +-
 src/liboslcomp/oslcomp.cpp       | 6 +++---
 src/liboslexec/llvm_instance.cpp | 2 +-
 4 files changed, 6 insertions(+), 6 deletions(-)

--- a/src/cmake/externalpackages.cmake
+++ b/src/cmake/externalpackages.cmake
@@ -58,7 +58,7 @@ checked_find_package (pugixml REQUIRED
 # LLVM library setup
 checked_find_package (LLVM REQUIRED
                       VERSION_MIN 11.0
-                      VERSION_MAX 20.9
+                      VERSION_MAX 21.1.3
                       PRINT LLVM_SYSTEM_LIBRARIES CLANG_LIBRARIES
                             LLVM_SHARED_MODE)
 # ensure include directory is added (in case of non-standard locations
--- a/src/liboslcomp/oslcomp.cpp
+++ b/src/liboslcomp/oslcomp.cpp
@@ -171,11 +171,11 @@ OSLCompilerImpl::preprocess_buffer(const std::string& buffer,
     llvm::raw_string_ostream errstream(preproc_errors);
     clang::DiagnosticOptions* diagOptions = new clang::DiagnosticOptions();
     clang::TextDiagnosticPrinter* diagPrinter
-        = new clang::TextDiagnosticPrinter(errstream, diagOptions);
+        = new clang::TextDiagnosticPrinter(errstream, *diagOptions);
     llvm::IntrusiveRefCntPtr<clang::DiagnosticIDs> diagIDs(
         new clang::DiagnosticIDs);
     clang::DiagnosticsEngine* diagEngine
-        = new clang::DiagnosticsEngine(diagIDs, diagOptions, diagPrinter);
+        = new clang::DiagnosticsEngine(diagIDs, *diagOptions, diagPrinter);
     inst.setDiagnostics(diagEngine);
 
     const std::shared_ptr<clang::TargetOptions> targetopts
@@ -183,7 +183,7 @@ OSLCompilerImpl::preprocess_buffer(const std::string& buffer,
     targetopts->Triple = llvm::sys::getDefaultTargetTriple();
     clang::TargetInfo* target
         = clang::TargetInfo::CreateTargetInfo(inst.getDiagnostics(),
-                                              targetopts);
+                                              *targetopts);
 
     inst.setTarget(target);
 
--- a/src/liboslexec/llvm_instance.cpp
+++ b/src/liboslexec/llvm_instance.cpp
@@ -2225,7 +2225,7 @@ BackendLLVM::run()
             // The triple is empty with recent versions of LLVM (e.g., 15) for reasons that aren't
             // clear. So we must set them to the expected values.
             // See: https://llvm.org/docs/NVPTXUsage.html
-            ll.module()->setTargetTriple("nvptx64-nvidia-cuda");
+            ll.module()->setTargetTriple(llvm::Triple("nvptx64-nvidia-cuda"));
             ll.module()->setDataLayout(
                 "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-i128:128:128-f32:32:32-f64:64:64-v16:16:16-v32:32:32-v64:64:64-v128:128:128-n16:32:64");
 

